<?php

use Application\Controller\Helper\Constantes;

$mes = $this->mes;
?>
<script type="text/javascript">
    window.onload = initPage;

    function initPage() {

        var today = new Date();
        var dd = today.getDate();
        var mmVigente = today.getMonth();
        var mm = <?php echo $mes - 1; ?>; //January is 0!
        var yyyy = today.getFullYear();
        var labelDays = dd - 1;
        if (mmVigente != mm) {
            if (mmVigente == 0) {
                yyyy = yyyy - 1;
            }
        }


        if ($('#dataAtendimento').prop('type') != 'date') {
            var dataMinima;
            var dataMaxima;
            if (mmVigente != mm) {
                dataMinima = new Date(yyyy, mm, 1);
                dataMaxima = new Date(yyyy, mm, 31);
            } else {
                dataMinima = '-' + labelDays;
                dataMaxima = 0;
            }
            $('#dataAtendimento').datepicker({
                dateFormat: 'dd/mm/yy',
                maxDate: dataMaxima,
                minDate: dataMinima
            });
        } else {
            var mmTrabalhado;
            var firstDay;
            mmTrabalhado = mm + 1;
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mmTrabalhado < 10) {
                mmTrabalhado = '0' + mmTrabalhado
            }

            if (mmVigente != mm) {
                today = yyyy + '-' + mmTrabalhado + '-31';
            } else {
                today = yyyy + '-' + mmTrabalhado + '-' + dd;
            }
            firstDay = yyyy + '-' + mmTrabalhado + '-01';
            $('#<?php echo Constantes::$CAMPO_DATA_ATENDIMENTO; ?>').attr('max', today);
            $('#<?php echo Constantes::$CAMPO_DATA_ATENDIMENTO; ?>').attr('min', firstDay);
        }

        function isMobile() {
            var check = false;
            (function (a) {
                if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4)))
                    check = true;
            })(navigator.userAgent || navigator.vendor || window.opera);
            return check;
        }
        ;
        $.validator.addMethod(
                "date",
                function (value, element) {
                    var check = false;
                    if (isMobile()) {
                        var re = /^\d{4}-\d{1,2}-\d{1,2}$/;
                        if (re.test(value)) {
                            var adata1 = value.split('-');
                            var gg1 = parseInt(adata1[2], 10);
                            var mm1 = parseInt(adata1[1], 10);
                            var aaaa1 = parseInt(adata1[0], 10);
                            var xdata1 = new Date(aaaa1, mm1 - 1, gg1);
                            if ((xdata1.getFullYear() == aaaa1) && (xdata1.getMonth() == mm1 - 1) && (xdata1.getDate() == gg1))
                                check = true;
                            else
                                check = false;
                        } else
                            check = false;
                    } else {
                        var re = /^\d{1,2}\/\d{1,2}\/\d{4}$/;
                        if (re.test(value)) {
                            var adata = value.split('/');
                            var gg = parseInt(adata[0], 10);
                            var mm = parseInt(adata[1], 10);
                            var aaaa = parseInt(adata[2], 10);
                            var xdata = new Date(aaaa, mm - 1, gg);
                            if ((xdata.getFullYear() == aaaa) && (xdata.getMonth() == mm - 1) && (xdata.getDate() == gg))
                                check = true;
                            else
                                check = false;
                        } else
                            check = false;
                    }

                    return this.optional(element) || check;
                },
                "<?php echo $this->translate(Constantes::$TRADUCAO_VALIDACAO_DATA_VALIDA); ?>"
                );

        $('#<?php echo Constantes::$FORM_CADASTRAR_ATENDIMENTO; ?>').validate({
            /* @validation states + elements 
             ------------------------------------------- */
            focusInvalid: false,
            errorClass: "state-error",
            validClass: "state-success",
            errorElement: "em",
            /* @validation rules 
             ------------------------------------------ */

            rules: {
                dataAtendimento: {
                    required: true,
                    date: true,
                    maxlength: 10,
                    minlength: 10,
                },
                quem: {
                    required: true
                }
            },
            /* @validation error messages 
             ---------------------------------------------- */

            messages: {
                dataAtendimento: {
                    required: '<?php echo $this->translate(Constantes::$TRADUCAO_VALIDACAO_DATA); ?>',
                    maxlength: '<?php echo $this->translate(Constantes::$TRADUCAO_VALIDACAO_MAX_DATE); ?>',
                    minlength: '<?php echo $this->translate(Constantes::$TRADUCAO_VALIDACAO_MIN_DATE); ?>'
                },
                quem: {
                    required: '<?php echo $this->translate(Constantes::$TRADUCAO_VALIDACAO_LIDER); ?>'
                }
            },
            /* @validation highlighting + error placement  
             ---------------------------------------------------- */

            highlight: function (element, errorClass, validClass) {
                $(element).closest('.field').addClass(errorClass).removeClass(validClass);
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).closest('.field').removeClass(errorClass).addClass(validClass);
            },
            errorPlacement: function (error, element) {
                if (element.is(":radio") || element.is(":checkbox")) {
                    element.closest('.option-group').after(error);
                } else {
                    error.insertAfter(element.parent());
                }
            }


        });
    }
    ;


    function preValidacao() {
        var validator;
        validator = $('#<?php echo Constantes::$FORM_CADASTRAR_ATENDIMENTO; ?>').validate();
        if (validator.form()) {
            $(<?php echo Constantes::$FORM_CADASTRAR_ATENDIMENTO; ?>).submit();
        }
    }
</script>
<?php
