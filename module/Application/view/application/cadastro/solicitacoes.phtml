<?php

use Application\Controller\Helper\Constantes;
use Application\Model\Entity\EntidadeTipo;
use Application\Model\Entity\Situacao;
use Application\Model\Entity\SolicitacaoTipo;
use Application\Controller\Helper\Funcoes;
use Application\View\Helper\BotaoSimples;

$html = '';
$html .= $this->templateFormularioTopo('Solicitaçoes');
$html .= '<div class="panel-body bg-light">';
$html .= '<form action="/cadastroSolicitacoes" method="post">';
$html .= $this->cabecalhoDeMeses();
$html .= '</form>';
$html .= '</div>';
$html .= '<div class="panel-footer text-right">';
$stringNomeDaFuncaoOnClickCadastro = 'mostrarSplash(); funcaoCircuito("cadastroSolicitacao", 0)';
$html .= $this->botaoLink($this->translate(Constantes::$TRADUCAO_CADASTRAR), Constantes::$STRING_HASHTAG, 0, $this->funcaoOnClick($stringNomeDaFuncaoOnClickCadastro));
$html .= '</div>';
$html .= $this->templateFormularioRodape();

foreach($this->solicitacoesTipo as $solicitacaoTipo){
	$colspan = 0;
	$htmlThead = '';
	$htmlThead .= '<th class="hidden-xs">#</th>';
	$htmlThead .= '<th class="hidden-xs">Solicitado em</th>';
	switch($solicitacaoTipo->getId()){
	case SolicitacaoTipo::TRANSFERIR_LIDER_NA_PROPRIA_EQUIPE:
		$colspan = 6;
		$htmlThead .= '<th>Quem</th>';
		$htmlThead .= '<th class="hidden-xs">Novo Líder</th>';
		break;
	case SolicitacaoTipo::REMOVER_LIDER:
		$colspan = 4;
		$htmlThead .= '<th>Quem</th>';
		break;
	case SolicitacaoTipo::REMOVER_CELULA:
		$colspan = 5;
		$htmlThead .= '<th>Quem</th>';
		$htmlThead .= '<th>Célula</th>';
		break;
	case SolicitacaoTipo::TRANSFERIR_LIDER_PARA_OUTRA_EQUIPE:
		$colspan = 6;
		$htmlThead .= '<th>Quem</th>';
		$htmlThead .= '<th class="hidden-xs">Novo Líder</th>';
		break;
	case SolicitacaoTipo::UNIR_CASAL:
		$colspan = 5;
		$htmlThead .= '<th>Homem</th>';
		$htmlThead .= '<th>Mulher</th>';
		break;
	case SolicitacaoTipo::TRANSFERIR_ALUNO:
		$colspan = 5;
		$htmlThead .= '<th>Quem</th>';
		$htmlThead .= '<th>Novo Líder</th>';
		break;
	case SolicitacaoTipo::SUBIR_LIDER:
		$colspan = 4;
		$htmlThead .= '<th>Quem</th>';
		break;
	case SolicitacaoTipo::TRANSFERIR_IGREJA:
		$colspan = 6;
		$htmlThead .= '<th>Quem</th>';
		$htmlThead .= '<th class="hidden-xs">Novo Líder</th>';
		break;
	case SolicitacaoTipo::ADICIONAR_RESPONSABILIDADE_SECRETARIO:
		$colspan = 6;
		$htmlThead .= '<th>Secretário</th>';
		$htmlThead .= '<th class="hidden-xs">De Quem</th>';
		break;
	case SolicitacaoTipo::REMOVER_RESPONSABILIDADE_SECRETARIO:
		$colspan = 6;
		$htmlThead .= '<th>Secretário Removido</th>';
		$htmlThead .= '<th class="hidden-xs">De Quem</th>';
		break;
	case SolicitacaoTipo::ABRIR_IGREJA_COM_EQUIPE_COMPLETA:
		$colspan = 4;
		$htmlThead .= '<th>Quem</th>';
		break;
	case SolicitacaoTipo::ABRIR_EQUIPE_COM_LIDER_DA_IGREJA:
		$colspan = 4;
		$htmlThead .= '<th>Quem</th>';
		break;
	}
	
	$htmlThead .= '<th>Status</th>';
	$htmlThead .= '<th class="hidden-xs">Aceito Em</th>';

	if($solicitacaoTipo->getId() === SolicitacaoTipo::REMOVER_LIDER
		|| $solicitacaoTipo->getId() === SolicitacaoTipo::REMOVER_CELULA){
			$htmlThead .= '<td></td>';
		}	

	$html .= '<div class="panel-heading bg-primary mt20">';
	$html .= '<span class="panel-title">';
	$html .= '<span class="fa fa-table"></span>'.$solicitacaoTipo->getNome().'</span>';
	$html .= '</div>';

	$html .= '<div class="panel-body pn">';
	$html .= '<div class="bs-component">';

	$html .= '<div class="table-responsive">';
	$html .= '<table style="font-size:10px;" class="table table-condensed table-hover bg-light mt15 footable" data-filter="#fooFilter">';
	$html .= '<thead>';

	$html .= '<tr>';
	$html .= $htmlThead;
	$html .= '</tr>';

	$html .= '</thead>';

	$html .= '<tbody>';

	foreach ($this->solicitacoes[$solicitacaoTipo->getId()] as $solicitacao) {
		$html .= '<tr>';
		$htmlTbody = '';
		$htmlTbody .= '<td class="hidden-xs">'.$solicitacao->getId().'</td>';
		$htmlTbody .= '<td class="hidden-xs">'.$solicitacao->getData_criacaoStringPadraoBrasil().'</td>';

		if($solicitacaoTipo->getId() !== SolicitacaoTipo::UNIR_CASAL
			&& $solicitacaoTipo->getId() !== SolicitacaoTipo::TRANSFERIR_ALUNO
			&& $solicitacaoTipo->getId() !== SolicitacaoTipo::REMOVER_RESPONSABILIDADE_SECRETARIO
				&& $solicitacaoTipo->getId() !== SolicitacaoTipo::ADICIONAR_RESPONSABILIDADE_SECRETARIO){
				$objeto = $solicitacao->getObjeto1();
				$grupo = $this->repositorio->getGrupoORM()->encontrarPorId($objeto);
				$dadosObjeto1 = '';
				if($solicitacaoTipo->getId() === SolicitacaoTipo::REMOVER_IGREJA
					|| $solicitacaoTipo->getId() === SolicitacaoTipo::ABRIR_IGREJA_COM_EQUIPE_COMPLETA
					|| $solicitacaoTipo->getId() === SolicitacaoTipo::TRANSFERIR_IGREJA){
						$dadosObjeto1 = $grupo->getEntidadeAtiva()->getNome() . ' - ';
				}

				$dadosObjeto1 .= $grupo->getNomeLideresAtivos();
				if($solicitacao->getSolicitacaoSituacaoAtiva() && 
					$solicitacao->getSolicitacaoSituacaoAtiva()->getSituacao()->getId() !== Situacao::CONCLUIDO &&
					$solicitacao->getSolicitacaoSituacaoAtiva()->getSituacao()->getId() !== Situacao::RECUSAO
				){
					$dadosObjeto1 .= ' - '.$grupo->getEntidadeAtiva()->infoEntidade();
					$quantidadeDeCelulas = 0;
					if($grupo->verificarSeEstaAtivo()){
						if($numeroIdentificador = $this->repositorio->getFatoCicloORM()->montarNumeroIdentificador($this->repositorio, $grupo)){
							$fatoMensalSomado = $this->repositorio->getFatoMensalORM()->buscarFatosSomadosPorNumeroIdentificadorMesEAno($numeroIdentificador, date('m'), date('Y'), 2);
							$arrayPeriodoDoMes = Funcoes::encontrarPeriodoDeUmMesPorMesEAno(date('m'), date('Y'));
							$contadorDePeriodos = 0;
							for ($indiceDeArrays = $arrayPeriodoDoMes[0]; $indiceDeArrays <= $arrayPeriodoDoMes[1]; $indiceDeArrays++) {
								$contadorDePeriodos++;
							}
							if($contadorDePeriodos === 0){
								$contadorDePeriodos = 1;
							}
							$cq = 'cq'.$contadorDePeriodos;
							$cbq = 'cbq'.$contadorDePeriodos;
							$celulasBoas = $fatoMensalSomado[$cq];
							$celulasBetas = $fatoMensalSomado[$cbq];
							$quantidadeDeCelulas = $celulasBoas + $celulasBetas;
						}
					}
					$dadosObjeto1 .= ' - Celulas: '.$quantidadeDeCelulas;
				}
				$htmlTbody .= '<td>'.$dadosObjeto1.'</td>';

				switch($solicitacaoTipo->getId()){
				case SolicitacaoTipo::TRANSFERIR_LIDER_NA_PROPRIA_EQUIPE:
					$objeto2 = $solicitacao->getObjeto2();
					$grupo2 = $this->repositorio->getGrupoORM()->encontrarPorId($objeto2);

					$htmlTbody .= '<td class="hidden-xs">'.$grupo2->getNomeLideresAtivos().'</td>';
					break;
				case SolicitacaoTipo::REMOVER_CELULA:
					$objeto = $solicitacao->getObjeto2();
					$grupoEvento = $this->repositorio->getGrupoEventoORM()->encontrarPorId($objeto);
					$htmlCelula = $this->translate(Funcoes::diaDaSemanaPorDia($grupoEvento->getEvento()->getDia())).' - ' . substr($grupoEvento->getEvento()->getHora(),0,5);
					$htmlTbody .= '<td>'.$htmlCelula.'</td>';
					break;
				case SolicitacaoTipo::TRANSFERIR_LIDER_PARA_OUTRA_EQUIPE:
					$objeto2 = $solicitacao->getObjeto2();
					$grupo2 = $this->repositorio->getGrupoORM()->encontrarPorId($objeto2);
					$htmlTbody .= '<td class="hidden-xs">'.$grupo2->getNomeLideresAtivos().'</td>';
					break;
				case SolicitacaoTipo::TRANSFERIR_IGREJA:
					$objeto2 = $solicitacao->getObjeto2();
					$grupo2 = $this->repositorio->getGrupoORM()->encontrarPorId($objeto2);
					$informacao = '';
					if($grupo2->getEntidadeAtiva()->getEntidadeTipo()->getId() === EntidadeTipo::regiao){
						$informacao = 'REGIÃO ' . $grupo2->getEntidadeAtiva()->getNome();
					}
					if($grupo2->getEntidadeAtiva()->getEntidadeTipo()->getId() === EntidadeTipo::coordenacao){
						$informacao = 'COORDENAÇÃO ' . $grupo2->getEntidadeAtiva()->getNumero();
					}
					$htmlTbody .= '<td class="hidden-xs">'.$informacao.'</td>';
					break;
				}
			}else{
				if($solicitacaoTipo->getId() === SolicitacaoTipo::UNIR_CASAL){
					$objeto = $solicitacao->getObjeto1();
					$grupo = $this->repositorio->getGrupoORM()->encontrarPorId($objeto);
					$objeto2 = $solicitacao->getObjeto2();
					$grupo2 = $this->repositorio->getGrupoORM()->encontrarPorId($objeto2);

					$htmlTbody .= '<td>'.$grupo->getNomeLideresAtivos().'</td>';
					$htmlTbody .= '<td>'.$grupo2->getNomeLideresAtivos().'</td>';
				}
				if($solicitacaoTipo->getId() === SolicitacaoTipo::TRANSFERIR_ALUNO){
					$objeto = $solicitacao->getObjeto1();
					$turmaPessoa = $this->repositorio->getTurmaPessoaORM()->encontrarPorId($objeto);
					$objeto2 = $solicitacao->getObjeto2();
					$grupo2 = $this->repositorio->getGrupoORM()->encontrarPorId($objeto2);

					$htmlTbody .= '<td>'.$turmaPessoa->getPEssoa()->getNome().'</td>';
					$htmlTbody .= '<td>'.$grupo2->getNomeLideresAtivos().'</td>';
				}
				if($solicitacaoTipo->getId() === SolicitacaoTipo::ADICIONAR_RESPONSABILIDADE_SECRETARIO){
					$objeto1 = $solicitacao->getObjeto1();
					$pessoaSecretario = $this->repositorio->getPessoaORM()->encontrarPorId($objeto1);
					$objeto2 = $solicitacao->getObjeto2();
					$grupo2 = $this->repositorio->getGrupoORM()->encontrarPorId($objeto2);
					$dadosObjeto2 = $grupo2->getEntidadeAtiva()->getEntidadeTipo()->getNome();
					$dadosObjeto2 .= ' ';
					$dadosObjeto2 .= $grupo2->getEntidadeAtiva()->infoEntidade();

					$htmlTbody .= '<td>'.$pessoaSecretario->getNome().'</td>';
					$htmlTbody .= '<td class="hidden-xs">'.$dadosObjeto2.'</td>';					
					
				}
				if($solicitacaoTipo->getId() === SolicitacaoTipo::REMOVER_RESPONSABILIDADE_SECRETARIO){
					$objeto = $solicitacao->getObjeto1();
					$grupo = $this->repositorio->getGrupoORM()->encontrarPorId($objeto);
					$dadosObjeto1 = $grupo->getNomeLideresAtivos();

					$objeto2 = $solicitacao->getObjeto2();
					$grupo2 = $this->repositorio->getGrupoORM()->encontrarPorId($objeto2);
					$dadosObjeto2 = $grupo2->getEntidadeAtiva()->getEntidadeTipo()->getNome();
					$dadosObjeto2 .= ' ';
					$dadosObjeto2 .= $grupo2->getEntidadeAtiva()->infoEntidade();
										
					$htmlTbody .= '<td>'.$dadosObjeto1.'</td>';
					$htmlTbody .= '<td class="hidden-xs">'.$dadosObjeto2.'</td>';					
					
				}
			}

		$corSituacao = 'default';
		$nomeSituacao = '';
		$dataDoAceiteDaSolicitacao = '';
		if($solicitacao->getSolicitacaoSituacaoAtiva()){
			switch($solicitacao->getSolicitacaoSituacaoAtiva()->getSituacao()->getId()){
			case Situacao::ACEITO_AGENDADO: $corSituacao = 'info'; $nomeSituacao = 'ACEITO';
			$dataDoAceiteDaSolicitacao = $solicitacao->getSolicitacaoSituacaoAtiva()->getData_criacaoStringPadraoBrasil();
			break;
			case Situacao::PENDENTE_DE_ACEITACAO: $corSituacao = 'warning';$nomeSituacao = 'PENDENTE'; break;
			case Situacao::RECUSAO: $corSituacao = 'danger';$nomeSituacao = 'RECUSADO'; break;
			case Situacao::CONCLUIDO: $corSituacao = 'success';$nomeSituacao = 'CONCLUIDO'; break;
			}
		}
		$htmlTbody .= '<td><span class="label label-'.$corSituacao.'">'.$nomeSituacao.'</span></td>';
		
		if($dataDoAceiteDaSolicitacao){
			$htmlTbody .= '<td class="hidden-xs">'. $dataDoAceiteDaSolicitacao .'</td>';
		}

		if(!$dataDoAceiteDaSolicitacao){
			$htmlTbody .= '<td class="hidden-xs"></td>';
		}
		
		if($solicitacaoTipo->getId() === SolicitacaoTipo::REMOVER_LIDER
			|| $solicitacaoTipo->getId() === SolicitacaoTipo::REMOVER_CELULA){
				if($solicitacao->getSolicitacaoSituacaoAtiva()
					&& ($solicitacao->getSolicitacaoSituacaoAtiva()->getSituacao()->getId() === Situacao::PENDENTE_DE_ACEITACAO
						|| $solicitacao->getSolicitacaoSituacaoAtiva()->getSituacao()->getId() === Situacao::ACEITO_AGENDADO)
					&& ($this->entidade->getEntidadeTipo()->getId() === EntidadeTipo::igreja
					 	|| $this->entidade->getEntidadeTipo()->getId() === EntidadeTipo::regiao)){
						$funcaoAceitar = $this->funcaoOnClick('if(confirm("Realmente deseja aceitar essa solicitação?")){mostrarSplash(); funcaoCircuito("cadastroSolicitacaoAceitar", '.$solicitacao->getId().');}');						
						$funcaoRecusar = $this->funcaoOnClick('if(confirm("Realmente deseja recusar essa solicitação?")){mostrarSplash(); funcaoCircuito("cadastroSolicitacaoRecusar", '.$solicitacao->getId().');}');
						$botaoAceitar = $this->botaoSimples('Aceitar', $funcaoAceitar, BotaoSimples::botaoMuitoPequenoImportante);
						$botaoRecusar = $this->botaoSimples('Recusar', $funcaoRecusar, BotaoSimples::botaoMuitoPequenoPerigoso);						
						$botaoAceitarIcone = $this->botaoSimples('<i class="fa fa-check" ></i>', $funcaoAceitar, BotaoSimples::botaoMuitoPequenoImportante);
						$botaoRecusarIcone = $this->botaoSimples('<i class="fa fa-times" ></i>', $funcaoRecusar, BotaoSimples::botaoMuitoPequenoPerigoso);
						$htmlTbody .= '<td class="hidden-xs">';	
						$htmlTbody .= $botaoRecusar;
						if($solicitacao->getSolicitacaoSituacaoAtiva()->getSituacao()->getId() === Situacao::PENDENTE_DE_ACEITACAO){
							$htmlTbody .= $botaoAceitar;
						}																	
						$htmlTbody .= '</td>';
						$htmlTbody .= '<td class="hidden-sm hidden-md hidden-lg">';						
						$htmlTbody .= $botaoRecusarIcone;
						if($solicitacao->getSolicitacaoSituacaoAtiva()->getSituacao()->getId() === Situacao::PENDENTE_DE_ACEITACAO){
							$htmlTbody .= $botaoAceitarIcone;
						}						
						$htmlTbody .= '</td>';
					}else{
						$htmlTbody .= '<td></td>';
					}
			}

		if($solicitacaoTipo->getId() === SolicitacaoTipo::TRANSFERIR_LIDER_PARA_OUTRA_EQUIPE){
				if($solicitacao->getSolicitacaoSituacaoAtiva()
					&& $solicitacao->getSolicitacaoSituacaoAtiva()->getSituacao()->getId() === Situacao::PENDENTE_DE_ACEITACAO
					&& $this->entidade->getEntidadeTipo()->getId() === EntidadeTipo::equipe
					&& intVal($solicitacao->getObjeto2()) === $this->grupo->getId()){
						$funcaoAceitar = $this->funcaoOnClick('funcaoCircuito("cadastroSolicitacaoReceber", '.$solicitacao->getId().')');
						$funcaoRecusar = $this->funcaoOnClick('if(confirm("Realmente deseja recusar essa solicitação?")){mostrarSplash(); funcaoCircuito("cadastroSolicitacaoRecusar", '.$solicitacao->getId().');}');
						$botaoAceitar = $this->botaoSimples('Receber', $funcaoAceitar, BotaoSimples::botaoMuitoPequenoImportante);
						$botaoRecusar = $this->botaoSimples('Recusar', $funcaoRecusar, BotaoSimples::botaoMuitoPequenoPerigoso);						
						$botaoAceitarIcone = $this->botaoSimples('<i class="fa fa-check" ></i>', $funcaoAceitar, BotaoSimples::botaoMuitoPequenoImportante);
						$botaoRecusarIcone = $this->botaoSimples('<i class="fa fa-times" ></i>', $funcaoRecusar, BotaoSimples::botaoMuitoPequenoPerigoso);
						$htmlTbody .= '<td class="hidden-xs">';						
						$htmlTbody .= $botaoRecusar;
						$htmlTbody .= $botaoAceitar;
						$htmlTbody .= '</td>';
						$htmlTbody .= '<td class="hidden-sm hidden-md hidden-lg">';						
						$htmlTbody .= $botaoRecusarIcone;
						$htmlTbody .= $botaoAceitarIcone;
						$htmlTbody .= '</td>';
					}else{
						$htmlTbody .= '<td></td>';
					}
			}
		$html .= $htmlTbody;
		$html .= '</tr>';
	}

	$html .= '</tbody>';
	$html .= '</table>';
	$html .= '</div>';

	$html .= '</div>';
	$html .= '</div>';
}

echo $html;

if($this->trocaDeResponsaveis){
	?>
		<div class="panel-heading bg-primary mt20">
			<span class="panel-title"><span class="fa fa-table"></span>TROCA DE RESPONSÁVEL</span>
		</div>
		<div class="panel-body pn">
			<div class="bs-component">
				<table style="font-size:10px;" class="table table-condensed table-hover bg-light mt15 footable footable-loaded" data-filter="#fooFilter">
					<thead>
						<tr>
							<th class="hidden-xs footable-sortable">
								<span class="footable-sort-indicator"></span>
							</th>
							<th class="footable-sortable">
								Solicitado em<span class="footable-sort-indicator"></span>
							</th>
							<th class="footable-sortable">
								Status<span class="footable-sort-indicator"></span>
							</th>
							<th class="hidden-xs footable-sortable">
								Aceito Em<span class="footable-sort-indicator"></span>
							</th>
							<th></th>
						</tr>
					</thead>
					<tbody>
						<?php
							$htmlBody = '';
							foreach($this->trocaDeResponsaveis as $trocaDeResponsavel){
								if($trocaDeResponsavel->getSituacao() == 'P' && $trocaDeResponsavel->verificarSeEstaAtivo()){
									$spanTrocaDeResponsavel = '<span class="label label-info">ACEITO</span>';
								}
								if($trocaDeResponsavel->getSituacao() == 'C' && $trocaDeResponsavel->verificarSeEstaAtivo()){
									$spanTrocaDeResponsavel = '<span class="label label-success">CONCLUIDO</span>';
								}
								if(!$trocaDeResponsavel->verificarSeEstaAtivo()){
									$spanTrocaDeResponsavel = '<span class="label label-danger">RECUSADO</span>';
								}
								$htmlBody .= '<tr>';
								$htmlBody .= '<td class="hidden-xs">'.$trocaDeResponsavel->getId().'</td>';
								$htmlBody .= '<td class="hidden-xs">'.$trocaDeResponsavel->getData_criacaoStringPadraoBrasil().'</td>';
								$htmlBody .= '<td onclick="mostrarTroca('.$trocaDeResponsavel->getId().');" style="cursor: pointer;">'.$spanTrocaDeResponsavel.' <i style="vertical-align: middle;" class="fa fa-info-circle fa-2x text-info"></i></td>';
								$htmlBody .= '<td>'.$trocaDeResponsavel->getData_criacaoStringPadraoBrasil().'</td>';

								if($trocaDeResponsavel->verificarSeEstaAtivo() && $trocaDeResponsavel->getSituacao() == 'P'){
									$funcaoRecusarTroca = $this->funcaoOnClick('if(confirm("Realmente deseja recusar essa solicitação?")){mostrarSplash(); funcaoCircuito("cadastroTrocaDeResponsavelRecusar", '.$trocaDeResponsavel->getId().');}');								
									$botaoRecusar = $this->botaoSimples('Recusar', $funcaoRecusarTroca, BotaoSimples::botaoMuitoPequenoPerigoso);														
									$botaoRecusarIcone = $this->botaoSimples('<i class="fa fa-times" ></i>', $funcaoRecusarTroca, BotaoSimples::botaoMuitoPequenoPerigoso);
									$htmlBody .= '<td class="hidden-xs"><span class="ladda-label">'.$botaoRecusar.'</span></td>';
									$htmlBody .= '<td class="hidden-sm hidden-md hidden-lg text-center">'.$botaoRecusarIcone.'</td>';
								} else {
									$htmlBody .= '<td></td>';
								}
								$htmlBody .= '</tr>';

								$htmlBody .= '<tr class="hidden troca'.$trocaDeResponsavel->getId().'">';
								$htmlBody .= '<th class="hidden-xs">#</th>';
								$htmlBody .= '<th>Quem</th>';
								$htmlBody .= '<th>Responsabilidade</th>';
								$htmlBody .= '<th>Operação</th>';
								$htmlBody .= '</tr>';

								foreach($trocaDeResponsavel->getResolucaoResponsabilidade() as $resolucaoResponsabilidade){
									$pessoa = $this->repositorio->getPessoaORM()->encontrarPorId($resolucaoResponsabilidade->getPessoa_id());
									$grupo = $this->repositorio->getGrupoORM()->encontrarPorId($resolucaoResponsabilidade->getGrupo_id());									
									if($resolucaoResponsabilidade->getOperacao() == 'R'){
										$spanResolucaoResponsabilidade = '<span class="label label-danger">REMOVER</span>';
									}
									if($resolucaoResponsabilidade->getOperacao() == 'A'){
										$spanResolucaoResponsabilidade = '<span class="label label-success">ADICIONAR</span>';
									}
									$htmlBody .= '<tr class="hidden troca'.$trocaDeResponsavel->getId().'">';
									$htmlBody .= '<td class="hidden-xs"></td>';
									$htmlBody .= '<td>'.$pessoa->getNomePrimeiroUltimo().'</td>';
									$htmlBody .= '<td>'.$grupo->getEntidadeAtiva()->infoEntidade().'</td>';
									$htmlBody .= '<td>'.$spanResolucaoResponsabilidade.'</td>';									
									$htmlBody .= '</tr>';
								}														
							}
							echo $htmlBody;
						?>		
					</tbody>
				</table>
			</div>
		</div>
	<?php
}

?>
<script>
function mostrarTroca(trocaId){     
		let classeTroca = ".troca" + trocaId;         
		let trTroca = $(classeTroca).toggleClass('hidden');			   				
    }
</script>
